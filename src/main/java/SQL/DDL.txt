 public void createSQLtables() {
        try {

            st.execute("CREATE TABLE IF NOT EXISTS erp(pk VARCHAR(20) NOT NULL,current_time INT NOT NULL,manufacturing_orders VARCHAR(30) NOT NULL,receive_orders VARCHAR(20) NOT NULL, production_orders VARCHAR(20) NOT NULL, shipping_orders VARCHAR(20) NOT NULL,CONSTRAINT PK_erp PRIMARY KEY (pk));");

            st.execute("CREATE TABLE IF NOT EXISTS client_order(client_name VARCHAR(30) NOT NULL, order_num INT NOT NULL, piece_type INT NOT NULL, qty INT NOT NULL, delivery_date INT NOT NULL, pen_delay FLOAT NOT NULL, pen_advance FLOAT NOT NULL, CONSTRAINT PK_client_order PRIMARY KEY (client_name,order_num));");

            st.execute("CREATE TABLE IF NOT EXISTS internal_orders(order_id INT NOT NULL,start_date INT NOT NULL,CONSTRAINT PK_internal_orders PRIMARY KEY (order_id));");

            st.execute("CREATE TABLE IF NOT EXISTS receive_order() INHERITS (internal_orders);");

            st.execute("CREATE TABLE IF NOT EXISTS production_order() INHERITS (internal_orders);");

            st.execute("CREATE TABLE IF NOT EXISTS shipping_order() INHERITS (internal_orders);");

            st.execute("CREATE TABLE IF NOT EXISTS manufacturing_order(production_id INT NOT NULL,production_time INT NOT NULL,begin_date INT NOT NULL, end_date INT NOT NULL,client_order VARCHAR(30), raw_material_order VARCHAR(30) NOT NULL, CONSTRAINT PK_internal_orders PRIMARY KEY(production_id));");

            st.execute("CREATE TABLE IF NOT EXISTS raw_material_order(id INT NOT NULL, qty INT NOT NULL, reserved_qty INT NOT NULL, piece_type INT NOT NULL, time_to_place_order INT NOT NULL,arrival_time INT NOT NULL,supplier VARCHAR(30) NOT NULL, CONSTRAINT PK_raw_material_order PRIMARY KEY(id));");

            st.execute("CREATE TABLE IF NOT EXISTS supplier(name VARCHAR(30) NOT NULL, delivery_time INT NOT NULL, min_qty INT NOT NULL,raw_piece VARCHAR(20) NOT NULL, CONSTRAINT PK_supplier PRIMARY KEY (name));");

            st.execute("CREATE TABLE IF NOT EXISTS raw_piece( id INT NOT NULL, type INT NOT NULL, unit_cost INT NOT NULL, CONSTRAINT Pk_raw_piece PRIMARY KEY(id));");

            /* ********************
            *  ALTER tables created
            *  ********************
            */

            st.execute("ALTER TABLE erp ADD CONSTRAINT FK_erp2manufacturing_order FOREIGN KEY (manufacturing_orders) REFERENCES manufacturing_order (production_id) ON DELETE NO ACTION ON UPDATE NO ACTION;");

            st.execute("ALTER TABLE erp ADD CONSTRAINT FK_erp2receive_order FOREIGN KEY (receive_orders) REFERENCES receive_order (order_id) ON DELETE NO ACTION ON UPDATE NO ACTION;");
            st.execute("ALTER TABLE erp ADD CONSTRAINT FK_erp2production_order FOREIGN KEY (production_orders) REFERENCES production_order (order_id) ON DELETE NO ACTION ON UPDATE NO ACTION;");
            st.execute("ALTER TABLE erp ADD CONSTRAINT FK_erp2shipping_order FOREIGN KEY (shipping_orders) REFERENCES shipping_order (order_id) ON DELETE NO ACTION ON UPDATE NO ACTION;");

            st.execute("ALTER TABLE manufacturing_order ADD CONSTRAINT FK_manufacturing2client_order FOREIGN KEY (client_order) REFERENCES client_order (client_name,order_num) ON DELETE NO ACTION ON UPDATE NO ACTION;");
            st.execute("ALTER TABLE manufacturing_order ADD CONSTRAINT FK_manufacturing_order2raw_material_order FOREIGN KEY (raw_material_order) REFERENCES raw_material_order (id) ON DELETE NO ACTION ON UPDATE NO ACTION;");

            st.execute("ALTER TABLE raw_material_order ADD CONSTRAINT FK_raw_material_order2supplier FOREIGN KEY(client_order) REFERENCES supplier (name) ON DELETE NO ACTION ON UPDATE NO ACTION;");

            st.execute("ALTER TABLE supplier ADD CONSTRAINT FK_supplier2raw_piece FOREIGN KEY(raw_piece) REFERENCES raw_piece (id) ON DELETE NO ACTION ON UPDATE NO ACTION;");



            st.execute("CREATE TABLE IF NOT EXISTS warehouse(name_wh VARCHAR(20) NOT NULL,location VARCHAR(20) NOT NULL,m3 INT NOT NULL,CONSTRAINT PK_warehouse PRIMARY KEY (name_wh));");

             st.execute("CREATE TABLE IF NOT EXISTS section(category_section VARCHAR(20) NOT NULL,m3 INT NOT NULL,name_wh VARCHAR(20) NOT NULL,CONSTRAINT PK_section PRIMARY KEY (category_section));");

             st.execute("CREATE TABLE IF NOT EXISTS goods(id_goods INT NOT NULL,name_goods VARCHAR(20) NOT NULL,qty INT NOT NULL,weight_pu INT NOT NULL,volume_pu INT NOT NULL," +
                     "fragility  BOOLEAN,category_section VARCHAR(20) NOT NULL,CONSTRAINT PK_goods PRIMARY KEY (id_goods, category_section));");

             st.execute("CREATE TABLE IF NOT EXISTS task(id_task INT NOT NULL,type_task VARCHAR(20) NOT NULL,product_name VARCHAR(20) NOT NULL,product_category VARCHAR(20) NOT NULL,
                     destination_category VARCHAR(20) NOT NULL,qty INT NOT NULL,is_completed  BOOLEAN,start_time VARCHAR(50) NOT NULL,end_time VARCHAR(50) NOT NULL,done_by VARCHAR(50),
                     category_section VARCHAR(20) NOT NULL,CONSTRAINT PK_task PRIMARY KEY (id_task, category_section));");

             st.execute("CREATE TABLE IF NOT EXISTS users(name VARCHAR(50),birthdate VARCHAR(10),contact VARCHAR(20),username VARCHAR(20),password VARCHAR(200),name_wh VARCHAR(20) NOT NULL,
                     CONSTRAINT PK_users PRIMARY KEY (username));");

             st.execute("CREATE TABLE IF NOT EXISTS boss()INHERITS (users);");

             st.execute("CREATE TABLE IF NOT EXISTS employee()INHERITS (users);");

             st.execute("CREATE TABLE IF NOT EXISTS manager()INHERITS (users);");

            st.execute("ALTER TABLE section ADD CONSTRAINT FK_section_name_wh FOREIGN KEY (name_wh) REFERENCES warehouse (name_wh) ON DELETE NO ACTION ON UPDATE NO ACTION;");

            st.execute("ALTER TABLE goods ADD CONSTRAINT FK_goods_category_section FOREIGN KEY (category_section) REFERENCES section (category_section) ON DELETE NO ACTION ON UPDATE NO ACTION;");

            st.execute("ALTER TABLE task ADD CONSTRAINT FK_task_category_section FOREIGN KEY (category_section) REFERENCES section (category_section) ON DELETE NO ACTION ON UPDATE NO ACTION;");

            st.execute("ALTER TABLE users ADD CONSTRAINT FK_users_name_wh FOREIGN KEY (name_wh) REFERENCES warehouse (name_wh) ON DELETE NO ACTION ON UPDATE NO ACTION;");

            st.execute("ALTER TABLE boss ADD CONSTRAINT FK_boss_name_wh FOREIGN KEY (name_wh) REFERENCES warehouse (name_wh) ON DELETE NO ACTION ON UPDATE NO ACTION;");

            st.execute("ALTER TABLE employee ADD CONSTRAINT FK_employee_name_wh FOREIGN KEY (name_wh) REFERENCES warehouse (name_wh) ON DELETE NO ACTION ON UPDATE NO ACTION;");

            st.execute("ALTER TABLE manager ADD CONSTRAINT FK_manager_name_wh FOREIGN KEY (name_wh) REFERENCES warehouse (name_wh) ON DELETE NO ACTION ON UPDATE NO ACTION;");

        } catch (Exception e) {
        System.out.println("Sql exception: Creating tables error");
        }
    }

    public void dropSQLtables(){
        try {
            st.execute("DROP TABLE IF EXISTS warehouse CASCADE");
            st.execute("DROP TABLE IF EXISTS section CASCADE");
            st.execute("DROP TABLE IF EXISTS goods CASCADE");
            st.execute("DROP TABLE IF EXISTS task CASCADE");
            st.execute("DROP TABLE IF EXISTS users CASCADE");
            st.execute("DROP TABLE IF EXISTS boss CASCADE");
            st.execute("DROP TABLE IF EXISTS employee CASCADE");
            st.execute("DROP TABLE IF EXISTS manager CASCADE");
        }catch (Exception e) {
        System.out.println("Sql exception: Dropping tables error");
        }
    }